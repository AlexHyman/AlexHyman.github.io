<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Http状态码]]></title>
    <url>%2F2018%2F07%2F20%2FHttp%E7%8A%B6%E6%80%81%E7%A0%81%2F</url>
    <content type="text"><![CDATA[HTTP状态码（HTTP Status Code）是用以表示网页服务器HTTP响应状态的3位数字代码。它由 RFC 2616 规范定义的，并得到RFC 2518、RFC 2817、RFC 2295、RFC 2774、RFC 4918等规范扩展。 状态码告知从服务器端返回的请求结果状态码的职责是当客户端向服务器端发送请求时，描述返回的请求结果。借助状态码，用户可以知道服务器端是正常处理了请求，还是出现了错误。 状态码的分类 2XX成功200 OK204 No Content206 Partial Content 3XX重定向301 Moved Permanently302 Found303 See Other304 Not Modified307 Temporary Redirect 4XX 客户端错误400 Bad Request401 Unauthorized403 Forbidden404 Not Found 5XX 服务器错误500 Internal Server Error503 Service Unavailable]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[emmet插件基本语法]]></title>
    <url>%2F2018%2F07%2F18%2Femmet%E6%8F%92%E4%BB%B6%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[Emmet (前身为 Zen Coding) 是一个能大幅度提高前端开发效率的一个工具。基本上，大多数的文本编辑器都会允许你存储和重用一些代码块，我们称之为“片段”。虽然片段能很好地推动你的生产力，但大多数的实现都有这样一个缺点：你必须先定义你的代码片段，并且不能在运行时进行拓展。Emmet把片段这个概念提高到了一个新的层次：你可以设置CSS形式的能够动态被解析的表达式，然后根据你所输入的缩写来得到相应的内容。Emmet是很成熟的并且非常适用于编写HTML/XML 和 CSS 代码的前端开发工具，但也可以用于编程语言。 emmets使用方法输入值，按Tab键执行！如果不能执行，把输入法切换为英文后重试！ 生成HTML格式输入：1！ 执行结果：12345678910&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;/body&gt;&lt;/html&gt; 添加meta标签设置编码为utf-8输入：1meta:utf 执行结果：1&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&gt; 初始化移动浏览显示输入：1meta:vp 执行结果：1&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;&gt; 在IE运行最新的渲染模式输入：1meta:compat 执行结果：1&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=7&quot;&gt; 添加link标签输入：1link 执行结果：1&lt;link rel=&quot;stylesheet&quot; href=&quot;&quot;&gt; 输入：1link:css 执行结果：1&lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt; 添加script标签输入：1script:src 执行结果：1&lt;script src=&quot;&quot;&gt;&lt;/script&gt; 添加元素标签.类名/ .类名（若不输入标签，默认添加div）输入：1p.name 执行结果：1&lt;p class=&quot;name&quot;&gt;&lt;/p&gt; 标签#ID名/ #ID名（若不输入标签，默认添加div）输入：1p#name 执行结果：1&lt;p id=&quot;name&quot;&gt;&lt;/p&gt; 添加a标签输入：1a 执行结果：1&lt;a href=&quot;&quot;&gt;&lt;/a&gt; 输入：1a:link 执行结果：1&lt;a href=&quot;http://&quot;&gt;&lt;/a&gt; 输入：1a:mail 执行结果：1&lt;a href=&quot;mailto:&quot;&gt;&lt;/a&gt;]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>插件</tag>
      </tags>
  </entry>
</search>
