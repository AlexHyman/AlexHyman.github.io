<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[JavaScript正则表达式]]></title>
    <url>%2F2018%2F08%2F18%2FJavaScript%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[正则表达式（英语：Regular Expression，在代码中常简写为regex、regexp或RE）使用单个字符串来描述、匹配一系列符合某个句法规则的字符串搜索模式。搜索模式可用于文本搜索和文本替换。 正则表达式修饰符修饰符 可以在全局搜索中不区分大小写: 修饰符 描述 i 执行对大小写不敏感的匹配。 g 执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。 m 执行多行匹配。 正则表达式模式方括号用于查找某个范围内的字符： 表达式 描述 [abc] 查找方括号之间的任何字符。 [0-9] 查找任何从 0 至 9 的数字。 (x&#124;y) 查找任何以 &#124; 分隔的选项。 元字符是拥有特殊含义的字符： 元字符 描述 \d 查找数字。 \s 查找空白字符。 \b 匹配单词边界。 \uxxxx 查找以十六进制数 xxxx 规定的 Unicode 字符。 量词: 量词 描述 n+ 匹配任何包含至少一个 n 的字符串。 n* 匹配任何包含零个或多个 n 的字符串。 n? 匹配任何包含零个或一个 n 的字符串。 正则表达式验证用户名正则用户名: 4到16位(字母，数字，下划线，减号）1234function isUsername(str) &#123; var reg = /^[a-zA-Z0-9_-]&#123;4,16&#125;$/; return reg.test(str);&#125; 密码正则密码: 最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符1234function isPassword(str) &#123; var reg = /^.*(?=.&#123;6,&#125;)(?=.*\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&amp;*? ]).*$/; return reg.test(str);&#125; 整数正则12345678function isInteger(str) &#123; var str1 = /^\d+$/; //正整数正则 var str2 = /^-\d+$/; //负整数正则 var str3 = /^-?\d+$/; //整数正则 return reg.test(str1); return reg.test(str2); return reg.test(str3);&#125; 数字正则数字: 可以是整数也可以是浮点数12345678function isNumber(str) &#123; var str1 = /^\d*\.?\d+$/; //正数正则 var str2 = /^-\d*\.?\d+$/; //负数正则 var str3 = /^-?\d*\.?\d+$/; //数字正则 return reg.test(str1); return reg.test(str2); return reg.test(str3);&#125; Email正则1234function isEmail(str) &#123; var str = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]&#123;2,4&#125;)$/; return reg.test(str);&#125; 手机号码正则手机号码: 11位，第一位为11234function isPhoneNumber(str) &#123; var str = /^1[34578]\d&#123;9&#125;$/; return reg.test(str);&#125; 身份证号正则身份证号: 18位数字，最后一位可以是“X”1234function isId(str) &#123; var str = /^[1-9]\d&#123;5&#125;(18|19|([23]\d))\d&#123;2&#125;((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d&#123;3&#125;[0-9Xx]$/; return reg.test(str);&#125; URL正则1234function isURL(str) &#123; var str = /^((https?|ftp|file):\/\/)?([\da-z\.-]+)\.([a-z\.]&#123;2,6&#125;)([\/\w \.-]*)*\/?$/; return reg.test(str);&#125; IPv4地址正则1234function isIPv4(str) &#123; var str = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.)&#123;3&#125;(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/; return reg.test(str);&#125; 十六进制颜色正则1234function isRGBHex(str) &#123; var str = /^#?([a-fA-F0-9]&#123;6&#125;|[a-fA-F0-9]&#123;3&#125;)$/; return reg.test(str);&#125; 日期正则12345678function isDate(str) &#123; //日期正则，简单判定,未做月份及日期的判定 var str1 = /^\d&#123;4&#125;(\-)\d&#123;1,2&#125;\1\d&#123;1,2&#125;$/; //日期正则，复杂判定 var str2 = var dP2 = /^(?:(?!0000)[0-9]&#123;4&#125;-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]&#123;2&#125;(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$/; return reg.test(str1); return reg.test(str2);&#125; QQ号码正则QQ: 5至11位数字，开头不能为01234function isQQ(str) &#123; var str = /^[1-9][0-9]&#123;4,10&#125;$/; return reg.test(str);&#125; 微信号正则微信号: 6至20位，以字母开头，字母，数字，减号，下划线1234function isWechat(str) &#123; var str = /^[a-zA-Z]([-_a-zA-Z0-9]&#123;5,19&#125;)+$/; return reg.test(str);&#125; 车牌号正则1234function isPlateNumber(str) &#123; var str = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]&#123;1&#125;[A-Z]&#123;1&#125;[A-Z0-9]&#123;4&#125;[A-Z0-9挂学警港澳]&#123;1&#125;$/; return reg.test(str);&#125; 包含中文正则1234function isChinese(str) &#123; var str = /[\u4E00-\u9FA5]/; return reg.test(str);&#125;]]></content>
      <categories>
        <category>前端基础</category>
      </categories>
      <tags>
        <tag>前端基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Web前端性能优化]]></title>
    <url>%2F2018%2F08%2F12%2FWeb%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%2F</url>
    <content type="text"><![CDATA[web前端是应用服务器处理之前的部分，前端主要包括：HTML、CSS、javascript、image等各种资源，针对不同的资源有不同的优化方式。 内容方面1.减少 HTTP 请求2.减少 DOM 元素数量3.减少 DNS 查找4.使用 Ajax 缓存5.避免重定向6.延迟加载组件,预加载组件 针对CSS1.把 CSS 放到代码页顶部2.从页面中分离 JavaScript 与 CSS3.精简 JavaScript 与 CSS4.避免 CSS 表达式 针对JavaScript1.脚本放到 HTML 代码页底部2.从页面中分离 JavaScript 与 CSS3.精简 JavaScript 与 CSS4.移除重复脚本 图片方面1.优化图片2.不要在 HTML 中是使用缩放图片3.使用恰当的图片格式4.使用 CSS Sprites 技巧对图片优化]]></content>
      <categories>
        <category>前端基础</category>
      </categories>
      <tags>
        <tag>前端基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL基础知识]]></title>
    <url>%2F2018%2F07%2F31%2FMySQL%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%2F</url>
    <content type="text"><![CDATA[MySQL是最流行的关系型数据库管理系统，在WEB应用方面MySQL是最好的RDBMS(Relational Database Management System：关系数据库管理系统)应用软件之一。 数据库数据库（Database）是按照数据结构来组织、存储和管理数据的仓库，每个数据库都有一个或多个不同的API用于创建，访问，管理，搜索和复制所保存的数据。我们也可以将数据存储在文件中，但是在文件中读写数据速度相对较慢。所以，现在我们使用关系型数据库管理系统（RDBMS）来存储和管理的大数据量。所谓的关系型数据库，是建立在关系模型基础上的数据库，借助于集合代数等数学概念和方法来处理数据库中的数据。 RDBMS即关系数据库管理系统(Relational Database Management System)的特点：1.数据以表格的形式出现2.每行为各种记录名称3.每列为记录名称所对应的数据域4.许多的行和列组成一张表单5.若干的表单组成database RDBMS 术语数据库: 数据库是一些关联表的集合。数据表: 表是数据的矩阵。在一个数据库中的表看起来像一个简单的电子表格。列: 一列(数据元素) 包含了相同的数据, 例如邮政编码的数据。行：一行（=元组，或记录）是一组相关的数据，例如一条用户订阅的数据。冗余：存储两倍数据，冗余降低了性能，但提高了数据的安全性。主键：主键是唯一的。一个数据表中只能包含一个主键。你可以使用主键来查询数据。外键：外键用于关联两个表。复合键：复合键（组合键）将多个列作为一个索引键，一般用于复合索引。索引：使用索引可快速访问数据库表中的特定信息。索引是对数据库表中一列或多列的值进行排序的一种结构。类似于书籍的目录。参照完整性: 参照的完整性要求关系中不允许引用不存在的实体。与实体完整性是关系模型必须满足的完整性约束条件，目的是保证数据的一致性。 MySQLMySQL是一个关系型数据库管理系统，由瑞典MySQL AB公司开发，目前属于Oracle公司。MySQL是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。 MySQL是开源的，所以你不需要支付额外的费用。MySQL支持大型的数据库。可以处理拥有上千万条记录的大型数据库。MySQL使用标准的SQL数据语言形式。MySQL可以运行于多个系统上，并且支持多种语言。这些编程语言包括C、C++、Python、Java、Perl、PHP、Eiffel、Ruby和Tcl等。MySQL对PHP有很好的支持，PHP是目前最流行的Web开发语言。MySQL支持大型数据库，支持5000万条记录的数据仓库，32位系统表文件最大可支持4GB，64位系统支持最大的表文件为8TB。MySQL是可以定制的，采用了GPL协议，你可以修改源码来开发自己的 MySQL 系统。]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Http状态码]]></title>
    <url>%2F2018%2F07%2F20%2FHttp%E7%8A%B6%E6%80%81%E7%A0%81%2F</url>
    <content type="text"><![CDATA[HTTP状态码（HTTP Status Code）是用以表示网页服务器HTTP响应状态的3位数字代码。它由 RFC 2616 规范定义的，并得到RFC 2518、RFC 2817、RFC 2295、RFC 2774、RFC 4918等规范扩展。 状态码告知从服务器端返回的请求结果状态码的职责是当客户端向服务器端发送请求时，描述返回的请求结果。借助状态码，用户可以知道服务器端是正常处理了请求，还是出现了错误。 状态码的分类 类别 原因短语 1XX Informational（信息性状态码） 接收的请求正在处理 2XX Success（成功状态码） 请求正常处理完毕 3XX Redirection（重定向状态码） 需要进行附加操作已完成请求 4XX Client Error（客户端错误状态码） 服务器无法处理请求 5XX Server Error（服务器端状态码） 服务器处理请求错误 2XX成功2XX的响应结果表明请求被正常处理了。 200 OK表示从客户端发来的请求在服务器端被正常处理。在响应报文内，随状态码一起返回的信息会因方法的不同而发生改变。比如，使用GET方法时，对应请求资源的实体会作为响应返回；而使用HEAD方法时，对应请求资源的实体主体不随报文首部作为响应返回（即在响应中只返回首部，不会返回实体的主体部分）。 204 No Content该状态码代表服务器接收的请求已成功处理，但在返回的响应报文中不含实体的主体部分。另外，也不允许返回任何实体的主体。比如，当从浏览器发出请求处理后，返回204响应，那么浏览器显示的页面不发生更新。一般在只需要从客户端往服务器发送信息，而对客户端不需要发送新信息内容的情况下使用。 206 Partial Content该状态码表示客户端进行了范围请求，而服务器成功执行了这部分的GET请求。响应报文中包含由Content——Range指定范围的实体内容。 3XX重定向3XX响应结果表明浏览器需要执行某些特殊的处理以正确处理请求。 301 Moved Permanently永久重定向。该状态码表示请求的资源已被分配了新的URI，以后应使用资源现在所指的URI。也就是说，如果已经把资源对应的URI保存为书签了，这时应该按Location首部字段提示的URI重新保存。像下方给出的请求URI，当指定资源路径的最后忘记添加斜杠“/”，就会产生301状态码。1http://example.com/sample 302 Found临时重定向。该状态码表示请求的资源已被分配了新的URI，希望用户（本次）能使用新的URI访问。和301 Moved Permanently状态码相似，但302状态码代表的资源不是被永久移动，只是临时性质的。换句话说，已移动的资源对应的URI将来还有可能发生改变。比如，用户把URI保存成书签，但不会像301状态码出现时那样去更新书签，而是仍旧保留返回302状态码的页面对应的URI。 303 See Other该状态码表示由于请求对应的资源存在着另一个URI，应使用GET方法定向获取请求资源。303状态码和302 Found状态码有着相同的功能，但303状态码明确表示客户端应当采用GET方法获取资源，这点与302状态码由区别。比如，当使用POST方法访问CGI程序，其执行后的处理结果是希望客户端能以GET方法重定向到另一个URI上去时，返回303状态码。虽然302 Found状态码也可以实现相同的功能，但这里使用303状态码时最理想的。 304 Not Modified该状态码表示客户端发送附带条件的请求时，服务器端允许请求访问资源，但因发生请求未满足条件的情况后，直接返回304Not Modified（服务器端资源未改变，可直接使用客户端未过期的缓存）。304状态码返回时，不包含任何响应的主体部分。304虽然被划分在3XX类别中，但是和重定向没有关系。 307 Temporary Redirect临时重定向。该状态码与302 Found有着相同的含义。尽管302标准禁止POST变换成GET，但实际使用时大家并不遵守。307会遵照浏览器标准，不会从POST变成GET。但是，对于处理响应时的行为，每种浏览器有可能出现不同的情况。 4XX 客户端错误4XX的响应表明客户端是发生错误的原因所在。 400 Bad Request该状态码表示请求报文中存在语法错误。当错误发生时，需修改请求的内容后再次发送请求。另外，浏览器会像200 OK一样对待该状态码。 401 Unauthorized该状态码表示发送的请求需要有通过HTTP认证（BASIC认证、DIGEST认证）的认证信息。另外若之前已进行过1次请求，则表示用户认证失败。返回含有401的响应必须包含一个适用于被请求资源的WWW-Authenticate首部用以质询（challenge）用户信息。当浏览器初次接收到401响应，会弹出认证用的对话窗口。 403 Forbidden该状态码表明对请求资源的访问被服务器拒绝了。服务器端没有必要给出拒绝的详细理由，但如果想作说明的话，可以在实体的主体部分对原因进行描述，这样就能让用户看到了。未获得文件系统的访问授权，访问权限出现某些问题（从未授权的发送源IP地址试图访问）等列举的情况都可能是发生403的原因。 404 Not Found该状态码表明服务器上无法找到请求的资源。除此之外，也可以在服务器端拒绝请求且不想说明理由时使用。 5XX 服务器错误5XX的响应结果表明服务器本身发生错误。 500 Internal Server Error该状态码表明服务器端在执行请求时发生了错误。也有可能是Web应用存在的bug或某些临时的故障。 503 Service Unavailable该状态码表明服务器暂时处于超负载或正在进行停机维护，现在无法处理请求。如果事先得知解除以上状况需要的时间，最好写入Retry-After首部字段再返回给客户端。 状态码和状况不一致不少返回的状态码响应都是错误的，但是用户可能察觉不到这点。比如Web应用程序内部发生错误，状态码依然返回200 OK，这种情况也经常遇到。]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[各种协议与HTTP协议的关系]]></title>
    <url>%2F2018%2F07%2F19%2F%E5%90%84%E7%A7%8D%E5%8D%8F%E8%AE%AE%E4%B8%8EHTTP%E5%8D%8F%E8%AE%AE%E7%9A%84%E5%85%B3%E7%B3%BB%2F</url>
    <content type="text"><![CDATA[负责传输的IP协议，确保可靠性的TCP协议，负责域名解析的DNS服务与Http协议的关系。 想浏览 http://demo.jp/xss Web页面客户端 ➡ DNS（告诉我demo.jp的IP地址吧） DNS ➡ 客户端（demo.jp对应的IP地址时20X.189.105.112） 客户端 ➡ demo.jp服务器（IP地址：20X.189.105.112）HTTP协议的职责生成针对目标Web服务器的HTTP请求报文（请给我 http://demo.jp/xss 页面的资源） TCP协议的职责为了方便通信，将HTTP请求报文分割成报文段按序号分为多个报文段把每个报文段可靠的传给对方 IP协议的职责（路由器）搜索对方的地址，一边中转一边传送 TCP协议的职责从对方那里收到的报文段重组到达的报文段按序号以原来的顺序重组请求报文 HTTP协议的职责对Web服务器请求的内容的处理（原来时想要这台计算机上的/xss/资源啊） 请求的处理结果也同样利用TCP/IP通信协议向用户进行回传]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML5新特性]]></title>
    <url>%2F2018%2F07%2F11%2FHTML5%E6%96%B0%E7%89%B9%E6%80%A7%2F</url>
    <content type="text"><![CDATA[用于绘画的 canvas 元素用于媒介回放的 video 和 audio 元素对本地离线存储的更好的支持新的特殊内容元素，比如 article、footer、header、nav、section新的表单控件，比如 calendar、date、time、email、url、search 用于绘画的 canvas 元素canvas标签定义图形，比如图表和其他图像。canvas标签只是图形容器，您必须使用脚本来绘制图形。12345678910&lt;canvas id=&quot;myCanvas&quot;&gt;&lt;/canvas&gt;&lt;script type=&quot;text/javascript&quot;&gt;var canvas=document.getElementById(&apos;myCanvas&apos;);var ctx=canvas.getContext(&apos;2d&apos;);ctx.fillStyle=&apos;#FF0000&apos;;ctx.fillRect(0,0,80,100);&lt;/script&gt; 用于媒介回放的 video 和 audio 元素videovideo元素支持三种视频格式：MP4,WebM和Ogg:MP4 = 带有H.264视频编码和AAC音频编码的MPEG4文件WebM = 带有VP8视频编码和Vorbis音频编码的WebM文件Ogg = 带有Theora视频编码和Vorbis音频编码的Ogg文件1234&lt;video width=&quot;320&quot; height=&quot;240&quot; controls&gt; &lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot;&gt; &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot;&gt;&lt;/video&gt; audioaudio元素支持三种音频格式文件:MP3,Wav和Ogg:MP3 audio/mpegOgg audio/oggWav audio/wav1234&lt;audio controls&gt; &lt;source src=&quot;horse.ogg&quot; type=&quot;audio/ogg&quot;&gt; &lt;source src=&quot;horse.mp3&quot; type=&quot;audio/mpeg&quot;&gt;&lt;/audio&gt; 对本地离线存储的更好的支持HTML5引入了应用程序缓存，这意味着web应用可进行缓存，并可在没有因特网连接时进行访问。应用程序缓存为应用带来三个优势：1.离线浏览 - 用户可在应用离线时使用它们2.速度 - 已缓存资源加载得更快3.减少服务器负载 - 浏览器将只从服务器下载更新过或更改过的资源。123456&lt;!DOCTYPE HTML&gt;&lt;html manifest=&quot;demo.appcache&quot;&gt;&lt;body&gt;内容&lt;/body&gt;&lt;/html&gt; 新的特殊内容元素articlearticle标签定义外部的内容。外部内容可以是来自一个外部的新闻提供者的一篇新的文章，或者来自blog的文本，或者是来自论坛的文本。亦或是来自其他外部源内容。12345&lt;article&gt;&lt;a href=&quot;http://www.apple.com&quot;&gt;Safari 5 released&lt;/a&gt;&lt;br /&gt;7 Jun 2010. Just after the announcement of the new iPhone 4 at WWDC, Apple announced the release of Safari 5 for Windows and Mac......&lt;/article&gt; footerfooter标签定义文档或节的页脚。footer元素应当含有其包含元素的信息。页脚通常包含文档的作者、版权信息、使用条款链接、联系信息等等。您可以在一个文档中使用多个footer元素。1234&lt;footer&gt; &lt;p&gt;Posted by: W3School&lt;/p&gt; &lt;p&gt;Contact information: &lt;a href=&quot;mailto:someone@example.com&quot;&gt;someone@example.com&lt;/a&gt;.&lt;/p&gt;&lt;/footer&gt; headerheader标签定义文档的页眉（介绍信息）123456&lt;header&gt;&lt;h1&gt;Welcome to my homepage&lt;/h1&gt;&lt;p&gt;My name is Donald Duck&lt;/p&gt;&lt;/header&gt;&lt;p&gt;The rest of my home page...&lt;/p&gt; navnav标签定义导航链接的部分。12345&lt;nav&gt;&lt;a href=&quot;index.asp&quot;&gt;Home&lt;/a&gt;&lt;a href=&quot;html5_meter.asp&quot;&gt;Previous&lt;/a&gt;&lt;a href=&quot;html5_noscript.asp&quot;&gt;Next&lt;/a&gt;&lt;/nav&gt; sectionsection标签定义文档中的节（section、区段）。比如章节、页眉、页脚或文档中的其他部分。1234&lt;section&gt; &lt;h1&gt;PRC&lt;/h1&gt; &lt;p&gt;The People&apos;s Republic of China was born in 1949...&lt;/p&gt;&lt;/section&gt; 新的表单控件 值 描述 button 定义可点击的按钮（大多与JavaScript使用来启动脚本） checkbox 定义复选框。 color 5 定义拾色器。 date 5 定义日期字段（带有calendar控件） datetime 5 定义日期字段（带有calendar和time控件） datetime-local 5 定义日期字段（带有calendar和time控件） month 5 定义日期字段的月（带有calendar控件） week 5 定义日期字段的周（带有calendar控件） time 5 定义日期字段的时、分、秒（带有time控件） email 5 定义用于e-mail地址的文本字段 file 定义输入字段和”浏览…”按钮，供文件上传 hidden 定义隐藏输入字段 image 定义图像作为提交按钮 number 5 定义带有spinner控件的数字字段 password 定义密码字段。字段中的字符会被遮蔽。 radio 定义单选按钮。 range 5 定义带有slider控件的数字字段。 reset 定义重置按钮。重置按钮会将所有表单字段重置为初始值。 search 5 定义用于搜索的文本字段。 submit 定义提交按钮。提交按钮向服务器发送数据。 tel 5 定义用于电话号码的文本字段。 text 默认。定义单行输入字段，用户可在其中输入文本。默认是20个字符。 url 5 定义用于URL的文本字段。]]></content>
      <categories>
        <category>前端基础</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>前端基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[emmet插件基本语法]]></title>
    <url>%2F2018%2F07%2F10%2Femmet%E6%8F%92%E4%BB%B6%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[Emmet (前身为 Zen Coding) 是一个能大幅度提高前端开发效率的一个工具。基本上，大多数的文本编辑器都会允许你存储和重用一些代码块，我们称之为“片段”。虽然片段能很好地推动你的生产力，但大多数的实现都有这样一个缺点：你必须先定义你的代码片段，并且不能在运行时进行拓展。Emmet把片段这个概念提高到了一个新的层次：你可以设置CSS形式的能够动态被解析的表达式，然后根据你所输入的缩写来得到相应的内容。Emmet是很成熟的并且非常适用于编写HTML/XML 和 CSS 代码的前端开发工具，但也可以用于编程语言。 emmets使用方法输入值，按Tab键执行！如果不能执行，把输入法切换为英文后重试！ 生成HTML格式输入：1！ 执行结果：12345678910&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;/body&gt;&lt;/html&gt; 添加meta标签设置编码为utf-8输入：1meta:utf 执行结果：1&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&gt; 初始化移动浏览显示输入：1meta:vp 执行结果：1&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;&gt; 在IE运行最新的渲染模式输入：1meta:compat 执行结果：1&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=7&quot;&gt; 添加link标签输入：1link 执行结果：1&lt;link rel=&quot;stylesheet&quot; href=&quot;&quot;&gt; 输入：1link:css 执行结果：1&lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt; 添加script标签输入：1script:src 执行结果：1&lt;script src=&quot;&quot;&gt;&lt;/script&gt; 添加元素标签.类名/ .类名（若不输入标签，默认添加div）输入：1p.name 执行结果：1&lt;p class=&quot;name&quot;&gt;&lt;/p&gt; 标签#ID名/ #ID名（若不输入标签，默认添加div）输入：1p#name 执行结果：1&lt;p id=&quot;name&quot;&gt;&lt;/p&gt; 添加a标签输入：1a 执行结果：1&lt;a href=&quot;&quot;&gt;&lt;/a&gt; 输入：1a:link 执行结果：1&lt;a href=&quot;http://&quot;&gt;&lt;/a&gt; 输入：1a:mail 执行结果：1&lt;a href=&quot;mailto:&quot;&gt;&lt;/a&gt;]]></content>
      <categories>
        <category>插件</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>插件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown基本语法]]></title>
    <url>%2F2018%2F07%2F08%2FMarkdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。Markdown的语法简洁明了、学习容易，而且功能比纯文本更强，因此有很多人用它写博客。世界上最流行的博客平台WordPress和大型CMS如Joomla、Drupal都能很好的支持Markdown。完全采用Markdown编辑器的博客平台有Ghost和Typecho。Markdown还能用于编写说明文档，并且以“README.MD”的文件名保存在软件的目录下面。 标题语法： 123456# 这是一级标题## 这是二级标题### 这是三级标题#### 这是四级标题##### 这是五级标题###### 这是六级标题 执行结果： 这是一级标题这是二级标题这是三级标题这是四级标题这是五级标题这是六级标题 字体语法： 1234**加粗的文字***倾斜的文字*`***斜体加粗的文字***~~加删除线的文字~~ 执行结果： 加粗的文字倾斜的文字斜体加粗的文字加删除线的文字 引用语法： 12345&gt;引用内容&gt;&gt;引用内容&gt;&gt;&gt;引用内容&gt;&gt;&gt;&gt;引用内容&gt;&gt;&gt;&gt;&gt;引用内容 执行结果： 引用内容 引用内容 引用内容 引用内容 引用内容 分割线语法： 1234-------******* 执行结果： 图片语法： 12345![图片alt](图片地址 &apos;&apos;图片title&apos;&apos;)图片alt就是显示在图片下面的文字，相当于对图片内容的解释。图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加![Markdown](https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1532958946535&amp;di=29f3a8f83cfc2ca43034a91a5aff163c&amp;imgtype=0&amp;src=http%3A%2F%2Fimg.linux.net.cn%2Fdata%2Fattachment%2Falbum%2F201409%2F05%2F103936p36j31yrgeydquee.jpg) 执行结果： 超链接语法： 1234[超链接名](超链接地址 &quot;超链接title&quot;)title可加可不加[我的GitHub](https://github.com/AlexHyman) 执行结果： 我的GitHub 列表语法： 123456789101112无序列表- 无序列表+ 无序列表* 无序列表有序列表1.有序列表2.有序列表3.有序列表列表嵌套上一级和下一级之间敲三个空格即可 执行结果： 无序列表： 无序列表 无序列表 无序列表 有序列表：1.有序列表2.有序列表3.有序列表 列表嵌套： 无序列表 1.有序列表 2.有序列表 3.有序列表 表格语法： 12345678910|表头|表头|表头||---|:--:|---:||内容|内容|内容||内容|内容|内容|第二行分割表头和内容，中间用“-”填充文字默认居左|:---|：表示文字居左|:--:|：表示文字居中|---:|：表示文字居右 执行结果： 表头 表头 表头 内容 内容 内容 内容 内容 内容 代码语法： 单行代码：```代码内容```多行代码：```代码内容``` 执行结果： 单行代码：代码内容多行代码：12代码内容代码内容]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
</search>
